# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main   # Deploy into main branch

# Uso de argumentos strategy y matrix para definir varias im치genes de m치quinas
# pool:
#   vmImage: 'windows-latest' # other options: 'macOS-latest', 'ubuntu-latest'

# strategy:
#   matrix:
#     linux:
#       imageName: "ubuntu-latest"
#     mac:
#       imageName: "macOS-latest"
#     windows:
#       imageName: "windows-latest"
#   maxParallel: 3
#
# pool:
#   vmImage: $(imageName)

# Uso de argumentos strategy y matrix para definir varias versiones de Java
# No se puede usar mas de un argumento strategy para tipo de m치quina y versi칩n Java

strategy:
  matrix:
    linux_jdk10:
      imageName: "ubuntu-latest"
      jdkVersion: "1.10"
    windows_jdk11:
      imageName: "windows-latest"
      jdkVersion: "1.11"
  maxParallel: 2

pool:
  vmImage: $(imageName)

steps:
- task: Maven@3   # Build, test, and deploy with Apache Maven.
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: $(jdkVersion)
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: PublishCodeCoverageResults@1   # Publish Cobertura or JaCoCo code coverage results from a build
  inputs:
    codeCoverageTool: "JaCoCo"
    summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml"
    reportDirectory: "$(System.DefaultWorkingDirectory)/**/site/jacoco"
    failIfCoverageEmpty: true
